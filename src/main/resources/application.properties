server.port=8081

spring.security.oauth2.client.registration.authClient.client-id=articles-client
spring.security.oauth2.client.registration.authClient.provider=authProvider
spring.security.oauth2.client.registration.authClient.client-secret=321123
spring.security.oauth2.client.registration.authClient.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.authClient.scope[0]=openid

spring.security.oauth2.client.provider.authProvider.issuer-uri=http://localhost:9292
spring.security.oauth2.client.provider.authProvider.authorization-uri=http://localhost:9292/oauth2/authorize
spring.security.oauth2.client.provider.authProvider.token-uri=http://localhost:9292/oauth2/token
spring.security.oauth2.client.provider.authProvider.jwk-set-uri=http://localhost:9292/oauth2/jwks

spring.main.allow-bean-definition-overriding=true

spring.application.name=nadiya-gateway
spring.cloud.gateway.routes[0].id=centrifugo_proxy
spring.cloud.gateway.routes[0].uri=ws://localhost:8000
spring.cloud.gateway.routes[0].predicates[0]=Path=/broker/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/broker/(?<segment>.*), /${segment}

spring.cloud.gateway.routes[1].id=back_end_proxy
spring.cloud.gateway.routes[1].uri=http://localhost:8080
spring.cloud.gateway.routes[1].predicates[0]=Path=/backend/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/backend/(?<segment>.*), /${segment}
eureka.client.enabled=false
logging.level.org.springframework=DEBUG